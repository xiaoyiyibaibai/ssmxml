<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd
                        http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-4.2.xsd ">
	<!-- 开启aop自动注入 -->
	<aop:aspectj-autoproxy />
	<!-- Aspect -->
	<bean id="logAspect" class="com.cn.hnust.aspectj.AspectjLoggerDemo" />

	<aop:config>

		<aop:aspect id="aspectLoggging" ref="logAspect">
			<!-- @Before -->
			<aop:pointcut id="pointCutBefore"
				expression="execution(* com.cn.hnust.service.impl.UserServiceImpl.getUserById(..))" />

			<aop:before method="logBefore" pointcut-ref="pointCutBefore" />

			<!-- @After -->
			<aop:pointcut id="pointCutAfter"
				expression="execution(* com.cn.hnust.service.impl.UserServiceImpl.getUserById(..))" />

			<aop:after method="logAfter" pointcut-ref="pointCutAfter" />

			<!-- @AfterReturning <aop:pointcut id="pointCutAfterReturning" expression="execution(* 
				com.yiibai.customer.bo.CustomerBo.addCustomerReturnValue(..))" /> <aop:after-returning 
				method="logAfterReturning" returning="result" pointcut-ref="pointCutAfterReturning" 
				/> @AfterThrowing <aop:pointcut id="pointCutAfterThrowing" expression="execution(* 
				com.yiibai.customer.bo.CustomerBo.addCustomerThrowException(..))" /> <aop:after-throwing 
				method="logAfterThrowing" throwing="error" pointcut-ref="pointCutAfterThrowing" 
				/> @Around <aop:pointcut id="pointCutAround" expression="execution(* com.yiibai.customer.bo.CustomerBo.addCustomerAround(..))" 
				/> <aop:around method="logAround" pointcut-ref="pointCutAround" /> -->

		</aop:aspect>

	</aop:config>

</beans>  